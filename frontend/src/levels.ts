import {
  Game,
  Grid,
  Journey,
  Level,
  Move,
  MoveDirection,
  MoveGrow,
  MoveSpin,
  Person,
  PersonType,
  Trajectory,
} from ".././protos/level_pb.js";

function getDefaultGrid(): Grid {
  return new Grid({
    indigenous: new Person({
      trajectory: new Trajectory(),
      type: PersonType.INDIGENOUS,
    }),
  });
}

export const GAME: Game = new Game({
  journeys: [
    new Journey({
      number: 1,
      allowedMoves: [
        new Move({ direction: MoveDirection.NORTH }),
        new Move({ direction: MoveDirection.SOUTH }),
        new Move({ direction: MoveDirection.WEST }),
        new Move({ direction: MoveDirection.EAST }),
      ],
      levels: [
        new Level({
          number: 1,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 460,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 2,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 440,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 3,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 420,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 4,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 400,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 5,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 380,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 6,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 360,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 7,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 340,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 8,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 320,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 9,
          size: 5,
          numMoves: 3,
          numAliens: 3,
          grid: getDefaultGrid(),
          timePerMoveMs: 300,
          trajectoryIterationsAllowed: 5,
        }),
      ],
      symbols: [
        "ü©≥",
        "üèñÔ∏è",
        "üëô",
        "‚òÄÔ∏è",
        "üç¶",
        "ü™º"
      ],
      minimumStarNumber: 30,
      nextLevel: 1,
    }),
    new Journey({
      number: 2,
      allowedMoves: [
        new Move({ direction: MoveDirection.NORTH_EAST }),
        new Move({ direction: MoveDirection.NORTH_WEST }),
        new Move({ direction: MoveDirection.SOUTH_EAST }),
        new Move({ direction: MoveDirection.SOUTH_WEST }),
      ],
      levels: [
        new Level({
          number: 1,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 440,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 2,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 420,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 3,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 400,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 4,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 380,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 5,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 360,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 6,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 340,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 7,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 320,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 8,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 300,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 9,
          size: 5,
          numMoves: 3,
          numAliens: 4,
          grid: getDefaultGrid(),
          timePerMoveMs: 280,
          trajectoryIterationsAllowed: 5,
        }),
      ],
      symbols: [
        "üå®Ô∏è",
        "‚ùÑÔ∏è",
        "‚õÑ",
        "‚õ∏Ô∏è",
        "üéÑ",
      ],
      minimumStarNumber: 30,
      nextLevel: 1,
    }),
    new Journey({
      number: 3,
      allowedMoves: [
        new Move({ direction: MoveDirection.NORTH }),
        new Move({ direction: MoveDirection.SOUTH }),
        new Move({ direction: MoveDirection.WEST }),
        new Move({ direction: MoveDirection.EAST }),
        new Move({ direction: MoveDirection.DOUBLE_NORTH }),
        new Move({ direction: MoveDirection.DOUBLE_SOUTH }),
        new Move({ direction: MoveDirection.DOUBLE_WEST }),
        new Move({ direction: MoveDirection.DOUBLE_EAST }),
      ],
      levels: [
        new Level({
          number: 1,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 420,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 2,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 400,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 3,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 380,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 4,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 360,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 5,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 340,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 6,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 320,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 7,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 300,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 8,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 280,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 9,
          size: 6,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 260,
          trajectoryIterationsAllowed: 5,
        }),
      ],
      symbols: [
        "‚òÑÔ∏è",
        "üåí",
        "üöÄ",
        "üõ∏",
        "üëΩ",
        "ü™ê",
      ],
      minimumStarNumber: 30,
      nextLevel: 1,
    }),
    new Journey({
      number: 4,
      allowedMoves: [
        new Move({
          direction: MoveDirection.NORTH,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.SOUTH,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.EAST,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.WEST,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.SOUTH,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.EAST,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.WEST,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.NORTH,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
      ],
      levels: [
        new Level({
          number: 1,
          size: 5,
          numMoves: 3,
          numAliens: 6,
          grid: getDefaultGrid(),
          timePerMoveMs: 420,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 2,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 400,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 3,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 380,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 4,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 360,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 5,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 340,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 6,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 320,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 7,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 300,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 8,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 280,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 9,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 260,
          trajectoryIterationsAllowed: 5,
        }),
      ],
      symbols: [
        "üçí",
        "üçá",
        "üçã",
        "üçç",
        "üçâ",
        "ü•ù",
      ],
      minimumStarNumber: 30,
      nextLevel: 1,
    }),
    new Journey({
      number: 5,
      allowedMoves: [
        new Move({
          direction: MoveDirection.NORTH,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.SOUTH,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.EAST,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.WEST,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.SOUTH,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.EAST,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.WEST,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.NORTH,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_NORTH,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_SOUTH,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_EAST,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_WEST,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_SOUTH,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_EAST,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_WEST,
          spin: MoveSpin.HALF_CLOCKWISE,
        }),
        new Move({
          direction: MoveDirection.DOUBLE_NORTH,
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
        }),
      ],
      levels: [
        new Level({
          number: 1,
          size: 5,
          numMoves: 3,
          numAliens: 6,
          grid: getDefaultGrid(),
          timePerMoveMs: 420,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 2,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 400,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 3,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 380,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 4,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 360,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 5,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 340,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 6,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),

          timePerMoveMs: 320,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 7,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 300,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 8,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 280,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 9,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 260,
          trajectoryIterationsAllowed: 5,
        }),
      ],
      symbols: [
        "üç∞",
        "ü•ß",
        "üßÅ",
        "üéÇ",
        "üç≠",
        "üç´",
      ],
      minimumStarNumber: 30,
      nextLevel: 1,
    }),
    new Journey({
      number: 6,
      allowedMoves: [
        new Move({
          spin: MoveSpin.HALF_CLOCKWISE,
          grow: MoveGrow.NO_GROW,
        }),
        new Move({
          spin: MoveSpin.HALF_CLOCKWISE,
          grow: MoveGrow.SHRINK,
        }),
        new Move({
          spin: MoveSpin.HALF_CLOCKWISE,
          grow: MoveGrow.ENLARGE,
        }),
        new Move({
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
          grow: MoveGrow.NO_GROW,
        }),
        new Move({
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
          grow: MoveGrow.SHRINK,
        }),
        new Move({
          spin: MoveSpin.HALF_COUNTER_CLOCKWISE,
          grow: MoveGrow.ENLARGE,
        }),
      ],
      levels: [
        new Level({
          number: 1,
          size: 5,
          numMoves: 3,
          numAliens: 6,
          grid: getDefaultGrid(),
          timePerMoveMs: 400,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 2,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 380,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 3,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 360,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 4,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 340,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 5,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 320,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 6,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 300,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 7,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 280,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 8,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 260,
          trajectoryIterationsAllowed: 5,
        }),
        new Level({
          number: 9,
          size: 5,
          numMoves: 3,
          numAliens: 5,
          grid: getDefaultGrid(),
          timePerMoveMs: 240,
          trajectoryIterationsAllowed: 5,
        }),
      ],
      symbols: [
        "ü´ë",
        "üåΩ",
        "ü•î",
        "üç†",
        "ü•ï",
        "ü´ò",
      ],
      minimumStarNumber: 45,
      nextLevel: 1,
    }),
  ],
  nextJourney: 1,
});
