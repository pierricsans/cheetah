:root {
  --box-size-cqw: 80cqw;
  --move-num: 8;
  --box-size-num-moves: 5;
  --cell-size: calc(var(--box-size-cqw) / var(--box-size-num-moves));
  --ball-size: calc(var(--cell-size) - 1px);
  --ball-opacity: 90%;
  --outer-box-border-thickness: 2vw;
  --body-background: #EA9010;
  --app-background: #37371F;
}

@font-face {
  font-family: "Noto Color Emoji", sans-serif;
  font-style: normal;
  font-weight: 400;
  src: url("https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&display=swap");
}

body {
  background-color: var(--body-background);
  font-family: "Orbitron", sans-serif;
  color: var(--body-background);
  margin: 0;
  user-select: none;
}

.selectable {
  animation-name: grow;
  animation-duration: 500ms;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  cursor: pointer;
}

.notSelectable {
  border-color: var(--secondary-color);
  background-color: var(--secondary-color);
  cursor: default;
}

@keyframes grow {
  from {
    transform: scale(1, 1);
  }

  to {
    transform: scale(105%, 105%);
  }
}

.horizontalChoices {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

@container app-content (min-width: 100px) {
  .option {
    display: inline-block;
    margin: 2px;
    width: var(--cell-size);
    aspect-ratio: 1 /1;
    font-size: var(--ball-size);
    font-family: "Noto Color Emoji", sans-serif;
    line-height: 1;
  }

  #selector {
    bottom: 50%;
    position: absolute;
    width: 100%;
    transform: translate(-50%, -50%);
    left: 50%;
  }

  #outerContainer {
    width: var(--box-size-cqw);
    aspect-ratio: 1 /1;
    border-color: var(--primary-color);
    border-style: solid;
    border-width: 3px;
    margin: 10px auto;
    padding: calc((var(--cell-size) / 2));
    border-radius: 6px;
  }

  #optionsContainer {
    bottom: 50%;
    position: absolute;
    transform: translate(0, 50%);
    width: 100%;
  }

  .bottomBar {
    bottom: 5cqw;
    left: 5cqw;
    position: absolute;
    width: 90cqw;
    border-radius: 6px;
    height: 7cqh;
    font-size: var(--ball-size);
  }
}

[hidden] {
  display: none;
}

#starCounter {
  font-family: "Orbitron", sans-serif;
  margin-left: 5cqw;
}

.journeyBoardHeader {
  font-family: "Noto Color Emoji", sans-serif;
}

.filledStar {
  color: var(--body-background);
}

.emptyStar {
  visibility: hidden;
}

.hidden {
  visibility: hidden;
}

.levelBoard-score {
  font-family: "Noto Color Emoji", sans-serif;
}

.levelBoard-number {
  margin: 3cqh 3cqw;
}

.levelAction {
  min-width: 20px;
  padding: 3px;
  border-radius: 6px;
}

.iconAction {
  font-family: "Noto Color Emoji", sans-serif;
  font-size: var(--ball-size);
  min-width: 20px;
  aspect-ratio: 1 /1;
  border-radius: 6px;
}

.validAction {
  color: var(--body-background);
  animation-name: grow;
  animation-duration: 500ms;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

#Restart {
  position: absolute;
  left: 45cqw;
  bottom: 20cqh;
}

#Retry {
  left: 25cqw;
  position: absolute;
  margin-top: 5cqh;
}

#Next {
  left: 65cqw;
  position: absolute;
  margin-top: 5cqh;
}

#selection {
  margin-top: 2cqh;
}

#selectorContainer {
  height: 100%;
  max-height: 800px;
  container-type: inline-size;
  container-name: app-content;
  position: fixed;
  margin: auto;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  max-width: 400px;
  background-color: var(--app-background);
  font-size: 30px;
  text-align: center;
  border: 1px;
  border-radius: 6px;
}

#innerContainer {
  position: relative;
  height: 100%;
}

.activeBead {
  transform: translate(-50%, 50%);
  position: absolute;
}

.bead {
  opacity: var(--ball-opacity);
  border-radius: 6px;
  font-family: "Noto Color Emoji", sans-serif;
  font-size: var(--ball-size);
  transform-origin: center center;
}

.bead:hover {
  cursor: pointer;
}

#inactiveBeadsContainer {
  display: flex;
  justify-content: space-around;
  align-items: stretch;
}

.inactiveBead {
  font-size: calc(var(--ball-size) / 2);
}
